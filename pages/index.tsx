import { useState } from 'react';
import type { NextPage } from "next";
import Head from "next/head";
import { PlusSmIcon } from '@heroicons/react/solid';
import { BookmarkIcon } from '@heroicons/react/outline';

import NavBar from '../components/NavBar';
import Header from '../components/Header';
import MenuButton from '../components/MenuButton';
import TabBar from '../components/TabBar';
import TaskCard from '../components/TaskCard';
import TaskPopup from '../components/TaskPopup';
import AddTaskPopup from '../components/AddTaskPopup';
import NamecardPopup from '../components/NamePopup';
import FriendPopup from '../components/FriendPopup';

import { jobTypes, sampleData } from '../data/options';

const Home: NextPage = () => {
  const [filter, setFilter] = useState('All');
  const [taskOpen, setTaskOpen] = useState(false);
  const [namecardOpen, setNamecardOpen] = useState(false);
  const [friendOpen, setFriendOpen] = useState(false);
  const [addTaskOpen, setAddTaskOpen] = useState(false);

  return (
    <div>
      <Head>
        <title>BYOB</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="App">
        <TaskPopup open={taskOpen} setOpen={setTaskOpen} />
        <NamecardPopup
          type="resume"
          open={namecardOpen}
          setOpen={setNamecardOpen}
        />
        <FriendPopup open={friendOpen} setOpen={setFriendOpen} />
        <AddTaskPopup open={addTaskOpen} setOpen={setAddTaskOpen} />
        <NavBar />
        <div className="max-w-7xl mx-auto px-2 sm:px-4 lg:divide-y lg:divide-gray-200 lg:px-8">
          <div className="mt-6 grid grid-cols-1 gap-y-6 sm:grid-cols-12 sm:grid-rows-3 sm:gap-x-6 lg:gap-8">
            <div className="group row-span-3 col-span-12 lg:col-span-9  aspect-w-2 aspect-h-1 rounded-lg overflow-hidden sm:aspect-h-1 sm:aspect-w-1">
              <Header />
            </div>
            <div className="group aspect-w-2 aspect-h-1 col-span-12 sm:col-span-4 lg:col-span-3 rounded-lg overflow-hidden sm:relative sm:aspect-none sm:h-full">
              <MenuButton
                icon="task"
                name="My Tasks"
                subText="Tasks dashboard"
                noti={2}
              />
            </div>
            <div className="group aspect-w-2 aspect-h-1 col-span-12 sm:col-span-4 lg:col-span-3 rounded-lg overflow-hidden sm:relative sm:aspect-none sm:h-full">
              <MenuButton
                icon="resume"
                name="DeSume"
                subText="View my desume"
              />
            </div>
            <div className="group aspect-w-2 aspect-h-1 col-span-12 sm:col-span-4 lg:col-span-3 rounded-lg overflow-hidden sm:relative sm:aspect-none sm:h-full">
              <MenuButton
                icon="connect"
                name="Connect"
                subText="View my connection"
                noti={2}
              />
            </div>
          </div>

          <div
            className="relative pt-10 pb-10 lg:pt-24 lg:pb-28"
            style={{ borderTop: 0 }}
          >
            <div className="absolute inset-0">
              <div className="bg-white h-1/3 sm:h-2/3" />
            </div>
            <div className="relative max-w-7xl mx-auto">
              <div className="text-left">
                <h2 className="text-2xl tracking-tight font-bold text-gray-900 sm:text-4xl">
                  Active Jobs
                  <button className="mt-1 align-top relative ml-4 w-8 h-8 border-black border-t-2 border-x-2 border-b-4 rounded-full text-center">
                    <PlusSmIcon
                      className="position-center h-8 w-8"
                      aria-hidden="true"
                    />
                  </button>
                </h2>
                <div className="mt-3 flex items-center">
                  <div className="flex-shrink-1">
                    <TabBar
                      nameList={jobTypes}
                      value={filter}
                      onChange={(newValue) => setFilter(newValue)}
                    />
                  </div>
                  <div className="ml-auto flex-shrink-0 text-black pl-12">
                    <button className="mt-1 align-top relative ml-4 w-12 h-12 border-black border-t-2 border-x-2 border-b-4 rounded-full text-center">
                      <BookmarkIcon
                        className="position-center h-8 w-8"
                        aria-hidden="true"
                      />
                    </button>
                  </div>
                </div>
              </div>
              <div className="mt-12 mx-auto grid gap-5 sm:grid-cols-2 lg:grid-cols-3 lg:max-w-none">
                {sampleData.map((item) => (
                  <TaskCard
                    key={item.id}
                    type={item.type}
                    createDate={item.createDate}
                    jobName={item.jobName}
                    jobType={item.jobType}
                    userBookmarked={item.userBookmarked}
                    userView={item.userView}
                    slack={item.slackList[0]}
                    onClick={() => setTaskOpen(true)}
                  />
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
